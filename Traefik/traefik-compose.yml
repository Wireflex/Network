services:

  reverse-proxy:
    image: traefik:v3.1.0
    command:
  
    # api с шифрованием, if ports=8000:8000,then true
    - "--api.insecure=false"
    # включение dashboard
    - "--api.dashboard=true"
    
    # провайдер docker/kubernetes/swarm
    - "--providers.docker"
    # отключение автоматического добавления контейнеров
    - "--providers.docker.exposedByDefault=false"
    # будет работать только с контейнерами в сети proxynet
    - "--providers.docker.network=proxynet"
    
    # чтобы видеть все ошибки и состояние traefik при подключении нового контейнера
    - "--log.level=DEBUG"
    
    # Entrypoints: точки входа, которые слушают входящий трафик на портах 80,443,3306
    - "--entrypoints.http.address=:80"
    - "--entrypoints.https.address=:443"
    - "--entrypoints.mysql.address=:3306"
    
    # перенаправление с http на htpps
    - "--entrypoints.http.http.redirections.entrypoint.to=https"
    - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
    
    # Let's Encrypt, получение ssl-сертификатов для https
    - "--entrypoints.https.http.tls.certResolver=le"
    - "--certificatesresolvers.le.acme.tlschallenge=true"
    - "--certificatesresolvers.le.acme.email=utyaganovnik@yandex.ru"
    - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"

    # добавление метаданных
    labels:
     # включение traefik
     - "traefik.enable=true"
     # на этот контейнер будут перенаправляться запросы, которые приходят на traefik.demo
     - "traefik.http.routers.dashboard.rule=Host(`traefik.demo.wireflex.online`)"
     # entrypoint https
     - "traefik.http.routers.dashboard.entrypoints=https"
     - "traefik.http.routers.dashboard.service=api@internal"
     # аутентификация
     - "traefik.http.routers.dashboard.middlewares=auth"
     # echo $(htpasswd -nb юзер пароль) | sed -e s/\\$/\\$\\$/g
     - "traefik.http.middlewares.auth.basicauth.users=wireflex:$$apr1$$EbJL18XP$$lUKElP3HMrSBKlo7qHNCU/"
    ports:
      - "80:80"
      - "443:443"
      - "3306:3306"
# The Web UI (enabled by --api.insecure=true)
#     - "8080:8080"
    volumes:
      # чтобы traefik мог видеть другие контейнеры, запущенные на серве
      - /var/run/docker.sock:/var/run/docker.sock
      # проброс ssl-сертификатов в контейнер
      - /opt/traefik/letsencrypt:/letsencrypt
